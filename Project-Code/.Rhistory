library(tidyverse)
library(dplyr)
library(ggplot2)
# Load the data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load the data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
# Load the data
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
oj <- read.csv("oj.csv")
print(summary(oj))
print(unique(oj$store))
print(unique(oj$brand))
library(ggplot2)
ggplot(oj, aes(x = factor(1), y = price)) + geom_boxplot() + labs(title = "Boxplot of Price", x = "Total", y = "Price ($)")
oj$log_price <- log(oj$price)
ggplot(oj, aes(x = 1, y = log_price)) + geom_boxplot() + labs(title = "Boxplot of Log(Price)", x = "Total", y = "Log(Price)")
ggplot(oj, aes(factor(brand), price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Price by Brand", x = "Brand", y = "Price ($)")
ggplot(oj, aes(factor(brand), log_price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Log(Price) by Brand", x = "Brand", y = "Log(Price)")
ggplot(oj, aes(x = logmove, y = log_price)) + geom_point(aes(color = factor(brand))) + labs(title = "Price vs Log(Price)", x = "Log(move)", y = "Log(Price)")
library(dplyr)
set.seed(123)
ntest = floor(nrow(oj)/3)  # 1/3 of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
testset = oj[testid,]
trainset = oj[-testid,]
model = glm(log_price ~ logmove , data = trainset)
summary(model)
predictions = predict(model, newdata = testset)
mse = mean((testset$log_price - predictions)^2)
print(mse)
brandmodel = glm(log_price ~ logmove + factor(brand), data = trainset)
summary(brandmodel)
elasticitymodel = glm(log_price ~ logmove + factor(brand) + logmove*(factor(brand)), data = trainset)
summary(elasticitymodel)
storeavg = oj %>% group_by(store) %>% summarise(avgprice = mean(price), avgfeat = mean(feat))
print(storeavg)
salesmodel = glm(logmove ~ log_price + feat + factor(brand), data = trainset)
summary(salesmodel)
pricesensmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = oj)
summary(pricesensmodel)
socioeconomicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC, data = oj)
summary(socioeconomicmodel)
unitcosts = data.frame(brand = c("Dominicks", "Minute Maid", "Tropicana"),elasticity = c(-2.94036, -2.42274, -2.3443))
unitcosts$avgprice <- oj %>%
group_by(brand) %>%
summarise(avgprice = mean(price, na.rm = TRUE)) %>%
pull(avgprice)
elastifrac = 1- 1/unitcosts$elasticity
unitcosts$unitcost = unitcosts$avgprice/elastifrac
print(unitcosts)
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = oj)
print(summary(storedemomodel))
logmove_hat = predict(storedemomodel, newdata = testset)
logmove_hat.old = predict(pricesensmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
set.seed(123)
ntest = floor(nrow(oj)/5)  # 20% of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
trainset = oj[-testid,]
testset = oj[testid,]
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = trainset)
logmove_hat.old = predict(storedemomodel, newdata = testset)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
demographicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = trainset)
logmove_hat = predict(demographicmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
mse.old = mean((testset$logmove - logmove_hat.old)^2)
mse = mean((testset$logmove - logmove_hat)^2)
print(mse.old)
print(mse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
# Load the data
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
oj <- read.csv("oj.csv")
print(summary(oj))
print(unique(oj$store))
print(unique(oj$brand))
library(ggplot2)
ggplot(oj, aes(x = factor(1), y = price)) + geom_boxplot() + labs(title = "Boxplot of Price", x = "Total", y = "Price ($)")
oj$log_price <- log(oj$price)
ggplot(oj, aes(x = 1, y = log_price)) + geom_boxplot() + labs(title = "Boxplot of Log(Price)", x = "Total", y = "Log(Price)")
ggplot(oj, aes(factor(brand), price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Price by Brand", x = "Brand", y = "Price ($)")
ggplot(oj, aes(factor(brand), log_price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Log(Price) by Brand", x = "Brand", y = "Log(Price)")
ggplot(oj, aes(x = logmove, y = log_price)) + geom_point(aes(color = factor(brand))) + labs(title = "Price vs Log(Price)", x = "Log(move)", y = "Log(Price)")
library(dplyr)
set.seed(123)
ntest = floor(nrow(oj)/3)  # 1/3 of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
testset = oj[testid,]
trainset = oj[-testid,]
model = glm(log_price ~ logmove , data = trainset)
summary(model)
predictions = predict(model, newdata = testset)
mse = mean((testset$log_price - predictions)^2)
print(mse)
brandmodel = glm(log_price ~ logmove + factor(brand), data = trainset)
summary(brandmodel)
elasticitymodel = glm(log_price ~ logmove + factor(brand) + logmove*(factor(brand)), data = trainset)
summary(elasticitymodel)
storeavg = oj %>% group_by(store) %>% summarise(avgprice = mean(price), avgfeat = mean(feat))
print(storeavg)
salesmodel = glm(logmove ~ log_price + feat + factor(brand), data = trainset)
summary(salesmodel)
pricesensmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = oj)
summary(pricesensmodel)
socioeconomicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC, data = oj)
summary(socioeconomicmodel)
unitcosts = data.frame(brand = c("Dominicks", "Minute Maid", "Tropicana"),elasticity = c(-2.94036, -2.42274, -2.3443))
unitcosts$avgprice <- oj %>%
group_by(brand) %>%
summarise(avgprice = mean(price, na.rm = TRUE)) %>%
pull(avgprice)
elastifrac = 1- 1/unitcosts$elasticity
unitcosts$unitcost = unitcosts$avgprice/elastifrac
print(unitcosts)
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = oj)
print(summary(storedemomodel))
logmove_hat = predict(storedemomodel, newdata = testset)
logmove_hat.old = predict(pricesensmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
set.seed(123)
ntest = floor(nrow(oj)/5)  # 20% of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
trainset = oj[-testid,]
testset = oj[testid,]
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = trainset)
logmove_hat.old = predict(storedemomodel, newdata = testset)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
demographicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = trainset)
logmove_hat = predict(demographicmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
mse.old = mean((testset$logmove - logmove_hat.old)^2)
mse = mean((testset$logmove - logmove_hat)^2)
print(mse.old)
print(mse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
# Load the data
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
oj <- read.csv("oj.csv")
print(summary(oj))
print(unique(oj$store))
print(unique(oj$brand))
library(ggplot2)
ggplot(oj, aes(x = factor(1), y = price)) + geom_boxplot() + labs(title = "Boxplot of Price", x = "Total", y = "Price ($)")
oj$log_price <- log(oj$price)
ggplot(oj, aes(x = 1, y = log_price)) + geom_boxplot() + labs(title = "Boxplot of Log(Price)", x = "Total", y = "Log(Price)")
ggplot(oj, aes(factor(brand), price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Price by Brand", x = "Brand", y = "Price ($)")
ggplot(oj, aes(factor(brand), log_price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Log(Price) by Brand", x = "Brand", y = "Log(Price)")
ggplot(oj, aes(x = logmove, y = log_price)) + geom_point(aes(color = factor(brand))) + labs(title = "Price vs Log(Price)", x = "Log(move)", y = "Log(Price)")
library(dplyr)
set.seed(123)
ntest = floor(nrow(oj)/3)  # 1/3 of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
testset = oj[testid,]
trainset = oj[-testid,]
model = glm(log_price ~ logmove , data = trainset)
summary(model)
predictions = predict(model, newdata = testset)
mse = mean((testset$log_price - predictions)^2)
print(mse)
brandmodel = glm(log_price ~ logmove + factor(brand), data = trainset)
summary(brandmodel)
elasticitymodel = glm(log_price ~ logmove + factor(brand) + logmove*(factor(brand)), data = trainset)
summary(elasticitymodel)
storeavg = oj %>% group_by(store) %>% summarise(avgprice = mean(price), avgfeat = mean(feat))
print(storeavg)
salesmodel = glm(logmove ~ log_price + feat + factor(brand), data = trainset)
summary(salesmodel)
pricesensmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = oj)
summary(pricesensmodel)
socioeconomicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC, data = oj)
summary(socioeconomicmodel)
unitcosts = data.frame(brand = c("Dominicks", "Minute Maid", "Tropicana"),elasticity = c(-2.94036, -2.42274, -2.3443))
unitcosts$avgprice <- oj %>%
group_by(brand) %>%
summarise(avgprice = mean(price, na.rm = TRUE)) %>%
pull(avgprice)
elastifrac = 1- 1/unitcosts$elasticity
unitcosts$unitcost = unitcosts$avgprice/elastifrac
print(unitcosts)
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = oj)
print(summary(storedemomodel))
logmove_hat = predict(storedemomodel, newdata = testset)
logmove_hat.old = predict(pricesensmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
set.seed(123)
ntest = floor(nrow(oj)/5)  # 20% of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
trainset = oj[-testid,]
testset = oj[testid,]
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = trainset)
logmove_hat.old = predict(storedemomodel, newdata = testset)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
demographicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = trainset)
logmove_hat = predict(demographicmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
mse.old = mean((testset$logmove - logmove_hat.old)^2)
mse = mean((testset$logmove - logmove_hat)^2)
print(mse.old)
print(mse)
gc()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
# Load the data
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
oj <- read.csv("oj.csv")
print(summary(oj))
print(unique(oj$store))
print(unique(oj$brand))
library(ggplot2)
ggplot(oj, aes(x = factor(1), y = price)) + geom_boxplot() + labs(title = "Boxplot of Price", x = "Total", y = "Price ($)")
oj$log_price <- log(oj$price)
ggplot(oj, aes(x = 1, y = log_price)) + geom_boxplot() + labs(title = "Boxplot of Log(Price)", x = "Total", y = "Log(Price)")
ggplot(oj, aes(factor(brand), price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Price by Brand", x = "Brand", y = "Price ($)")
ggplot(oj, aes(factor(brand), log_price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Log(Price) by Brand", x = "Brand", y = "Log(Price)")
ggplot(oj, aes(x = logmove, y = log_price)) + geom_point(aes(color = factor(brand))) + labs(title = "Price vs Log(Price)", x = "Log(move)", y = "Log(Price)")
library(dplyr)
set.seed(123)
ntest = floor(nrow(oj)/3)  # 1/3 of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
testset = oj[testid,]
trainset = oj[-testid,]
model = glm(log_price ~ logmove , data = trainset)
summary(model)
predictions = predict(model, newdata = testset)
mse = mean((testset$log_price - predictions)^2)
print(mse)
brandmodel = glm(log_price ~ logmove + factor(brand), data = trainset)
summary(brandmodel)
elasticitymodel = glm(log_price ~ logmove + factor(brand) + logmove*(factor(brand)), data = trainset)
summary(elasticitymodel)
storeavg = oj %>% group_by(store) %>% summarise(avgprice = mean(price), avgfeat = mean(feat))
print(storeavg)
salesmodel = glm(logmove ~ log_price + feat + factor(brand), data = trainset)
summary(salesmodel)
pricesensmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = oj)
summary(pricesensmodel)
socioeconomicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC, data = oj)
summary(socioeconomicmodel)
unitcosts = data.frame(brand = c("Dominicks", "Minute Maid", "Tropicana"),elasticity = c(-2.94036, -2.42274, -2.3443))
unitcosts$avgprice <- oj %>%
group_by(brand) %>%
summarise(avgprice = mean(price, na.rm = TRUE)) %>%
pull(avgprice)
elastifrac = 1- 1/unitcosts$elasticity
unitcosts$unitcost = unitcosts$avgprice/elastifrac
print(unitcosts)
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = oj)
print(summary(storedemomodel))
logmove_hat = predict(storedemomodel, newdata = testset)
logmove_hat.old = predict(pricesensmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
set.seed(123)
ntest = floor(nrow(oj)/5)  # 20% of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
trainset = oj[-testid,]
testset = oj[testid,]
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = trainset)
logmove_hat.old = predict(storedemomodel, newdata = testset)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
demographicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = trainset)
logmove_hat = predict(demographicmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
mse.old = mean((testset$logmove - logmove_hat.old)^2)
mse = mean((testset$logmove - logmove_hat)^2)
print(mse.old)
print(mse)
options()
install.packages(c("askpass", "backports", "bbotk", "car", "checkmate", "cli", "clock", "colorspace", "commonmark", "cpp11", "data.table", "dfidx", "digest", "doBy", "DoubleML", "e1071", "evaluate", "farver", "future", "gam", "glue", "hardhat", "ipred", "jsonlite", "kernlab", "leaps", "mlr3", "mlr3learners", "mlr3measures", "mlr3misc", "mlr3tuning", "mvtnorm", "paradox", "parallelly", "prodlim", "ps", "randomForest", "rbibutils", "Rcpp", "RcppEigen", "Rdpack", "recipes", "reticulate", "rlang", "sandwich", "sys", "timeDate", "uuid", "withr", "xfun", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
set.seed(123)
ntest = floor(nrow(oj)/3)  # 1/3 of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
testset = oj[testid,]
trainset = oj[-testid,]
model = glm(logmove ~ log_price , data = trainset)
summary(model)
predictions = predict(model, newdata = testset)
mse = mean((testset$log_price - predictions)^2)
print(mse)
brandmodel = glm(logmove ~ log_price + factor(brand), data = trainset)
summary(brandmodel)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
# Load the data
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
oj <- read.csv("oj.csv")
print(summary(oj))
print(unique(oj$store))
print(unique(oj$brand))
library(ggplot2)
ggplot(oj, aes(x = factor(1), y = price)) + geom_boxplot() + labs(title = "Boxplot of Price", x = "Total", y = "Price ($)")
oj$log_price <- log(oj$price)
ggplot(oj, aes(x = 1, y = log_price)) + geom_boxplot() + labs(title = "Boxplot of Log(Price)", x = "Total", y = "Log(Price)")
ggplot(oj, aes(factor(brand), price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Price by Brand", x = "Brand", y = "Price ($)")
ggplot(oj, aes(factor(brand), log_price)) + geom_boxplot(aes(fill = brand)) + labs(title = "Boxplot of Log(Price) by Brand", x = "Brand", y = "Log(Price)")
ggplot(oj, aes(x = logmove, y = log_price)) + geom_point(aes(color = factor(brand))) + labs(title = "Price vs Log(Price)", x = "Log(move)", y = "Log(Price)")
library(dplyr)
set.seed(123)
ntest = floor(nrow(oj)/3)  # 1/3 of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
testset = oj[testid,]
trainset = oj[-testid,]
model = glm(logmove ~ log_price , data = trainset)
summary(model)
predictions = predict(model, newdata = testset)
mse = mean((testset$log_price - predictions)^2)
print(mse)
brandmodel = glm(logmove ~ log_price + factor(brand), data = trainset)
summary(brandmodel)
elasticitymodel = glm(logmove ~ log_price + factor(brand) + logmove*(factor(brand)), data = trainset)
summary(elasticitymodel)
storeavg = oj %>% group_by(store) %>% summarise(avgprice = mean(price), avgfeat = mean(feat))
print(storeavg)
salesmodel = glm(logmove ~ log_price + feat + factor(brand), data = trainset)
summary(salesmodel)
pricesensmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = oj)
summary(pricesensmodel)
socioeconomicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC, data = oj)
summary(socioeconomicmodel)
unitcosts = data.frame(brand = c("Dominicks", "Minute Maid", "Tropicana"),elasticity = c(-2.94036, -2.42274, -2.3443))
unitcosts$avgprice <- oj %>%
group_by(brand) %>%
summarise(avgprice = mean(price, na.rm = TRUE)) %>%
pull(avgprice)
elastifrac = 1- 1/unitcosts$elasticity
unitcosts$unitcost = unitcosts$avgprice/elastifrac
print(unitcosts)
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + ETHNIC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = oj)
print(summary(storedemomodel))
logmove_hat = predict(storedemomodel, newdata = testset)
logmove_hat.old = predict(pricesensmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
set.seed(123)
ntest = floor(nrow(oj)/5)  # 20% of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
trainset = oj[-testid,]
testset = oj[testid,]
storedemomodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand), data = trainset)
logmove_hat.old = predict(storedemomodel, newdata = testset)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
demographicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = trainset)
logmove_hat = predict(demographicmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
mse.old = mean((testset$logmove - logmove_hat.old)^2)
mse = mean((testset$logmove - logmove_hat)^2)
print(mse.old)
print(mse)
elasticitymodel = glm(logmove ~ log_price + brand) + logmove*brand, data = trainset)
elasticitymodel = glm(logmove ~ log_price + brand + logmove*brand , data = trainset)
summary(elasticitymodel)
library(dplyr)
set.seed(123)
ntest = floor(nrow(oj)/3)  # 1/3 of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
testset = oj[testid,]
trainset = oj[-testid,]
model = glm(logmove ~ log_price , data = oj)
summary(model)
predictions = predict(model, newdata = testset)
mse = mean((testset$log_price - predictions)^2)
print(mse)
brandmodel = glm(logmove ~ log_price + factor(brand), data = oj)
summary(brandmodel)
elasticitymodel = glm(logmove ~ log_price + brand + logmove::brand , data = oj)
elasticitymodel = glm(logmove ~ log_price + brand + logmove:brand , data = oj)
summary(elasticitymodel)
elasticitymodel = glm(logmove ~ log_price + brand + log_price:brand , data = oj)
summary(elasticitymodel)
storeavg = oj %>% group_by(store) %>% summarise(avgprice = mean(price), avgfeat = mean(feat))
print(storeavg)
brandavg = oj %>% group_by(brand) %>% summarise(avgprice = mean(price), avgfeat = mean(feat))
print(brandavg)
pricesensmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*log_price + log_price*factor(brand), data = oj)
summary(pricesensmodel)
all_feat_model = glm(logmove ~ log_price*feat*brand, data = oj)
summary(all_feat_model)
storedemomodel = glm(logmove ~ log_price*feat*brand+ log_price*factor(brand) + INCOME + EDUC + ETHNIC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = oj)
print(summary(storedemomodel))
storedemomodel = glm(logmove ~ log_price*feat*brand + INCOME + EDUC + ETHNIC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = oj)
print(summary(storedemomodel))
set.seed(123)
ntest = floor(nrow(oj)/5)  # 20% of data is test
testid = sample(1:nrow(oj), ntest)  # indices of test obs
trainset = oj[-testid,]
testset = oj[testid,]
storedemomodel = glm(logmove ~ log_price*feat*brand), data = trainset)
storedemomodel = glm(logmove ~ log_price*feat*brand, data = trainset)
logmove_hat.old = predict(storedemomodel, newdata = testset)
fairrsquared.old = cor(logmove_hat.old, testset$logmove)^2
print(fairrsquared.old)
demographicmodel = glm(logmove ~ log_price + feat + factor(brand) + feat*factor(brand) + log_price*factor(brand) + INCOME + EDUC + AGE60 + HHLARGE + HVAL150+ SSTRDIST + SSTRVOL + CPDIST5 + CPWVOL5, data = trainset)
logmove_hat = predict(demographicmodel, newdata = testset)
fairrsquared = cor(logmove_hat, testset$logmove)^2
print(fairrsquared)
mse.old = mean((testset$logmove - logmove_hat.old)^2)
mse = mean((testset$logmove - logmove_hat)^2)
print(mse.old)
print(mse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read_csv("../../data/gapminder-data.csv")
df <- read_csv("gapminder-data.csv")
knitr::opts_chunk$set(echo = TRUE)
ggplot(df) + geom_boxplot(aes(x = credit_grade, y = loan_amount))
df <- read_csv("data/LoanStats.csv")
df <- read_csv("data/LoanStats.csv")
df <- read_csv("data/LoanStats.csv")
df <- read_csv("LoanStats.csv")
ggplot(df) + geom_boxplot(aes(x = credit_grade, y = loan_amount))
p1 = ggplot(df, aes(x = loan_amnt))
p2 = p1 +
geom_histogram() +
labs(title = "Distribution of Loan Amounts",
x = "Loan Amount",
y = "Frequency")
p1
df <- read_csv("LoanStats.csv")
p1 = ggplot(df, aes(x = loan_amnt))
p2 = p1 +
geom_histogram() +
labs(title = "Distribution of Loan Amounts",
x = "Loan Amount",
y = "Frequency")
p1
p2
p3 = p2+ facet_wrap(~grade, scale = 'free_y', nrow=2) + theme(axis.test.x = element_text(angle = 45, hjust = 1))
p3
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read_csv("LoanStats.csv")
df <- read_csv("LoanStats.csv")
dfn <- df[, c("home_ownership", "loan_amnt", "grade")]
dfn <- na.omit(dfn)
dfn <- na.omit(dfn)
dfn <- subset(dfn, !dfn$home_ownership %in% c("NONE"))
p1 = ggplot(dfn, aes(x = loan_amnt, fill = home_ownership))
p1
p2 = p1 + geom_histogram() + labs(title = "Distribution of Loan Amounts by Home Ownership",
x = "Loan Amount",
y = "Frequency")
p2
p3 = p2 + facet_wrap(~grade, scale = 'free_y', nrow=2) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p3
ggplot(dfn, aes(x = loan_amnt, fill = home_ownership)) + geom_histogram() + labs(title = "Distribution of Loan Amounts by Home Ownership", x = "Loan Amount", y = "Frequency"
ggplot(dfn, aes(x = loan_amnt, fill = home_ownership)) + geom_histogram() + labs(title = "Distribution of Loan Amounts by Home Ownership", x = "Loan Amount", y = "Frequency")
ggplot(dfn, aes(x = loan_amnt, fill = home_ownership)) + geom_histogram() + labs(title = "Distribution of Loan Amounts by Home Ownership", x = "Loan Amount", y = "Frequency")
ggplot(dfn, aes(x = home_ownership, y = loan_amnt, fill = grade)) + geom_boxplot() + labs(title = "Boxplot of Loan Amounts by Home Ownership", x = "Home Ownership", y = "Loan Amount ($)")
ggplot(dfn, aes(x = home_ownership, y = loan_amnt, fill = grade)) + geom_boxplot() + labs(title = "Boxplot of Loan Amounts by Home Ownership", x = "Home Ownership", y = "Loan Amount ($)") +scale_y_continuous(breaks = seq(0,40000,2000))
ggplot(dfn, aes(x = home_ownership, y = loan_amnt, fill = grade)) + geom_boxplot() + labs(title = "Boxplot of Loan Amounts by Home Ownership", x = "Home Ownership", y = "Loan Amount ($)") +scale_y_continuous(breaks = seq(0,40000,2000)) + scale_fill_discrete(name = 'Credit Grade')
ggplot(dfn, aes(x = home_ownership, y = loan_amnt, fill = grade)) + geom_boxplot() + labs(title = "Boxplot of Loan Amounts by Home Ownership", x = "Home Ownership", y = "Loan Amount ($)") +scale_y_continuous(breaks = seq(0,36000,2000)) + scale_fill_discrete(name = 'Credit Grade')
ggplot(dfn, aes(x = home_ownership, y = loan_amnt, fill = grade)) + geom_boxplot() + labs(title = "Boxplot of Loan Amounts by Home Ownership", x = "Home Ownership", y = "Loan Amount ($)") +scale_y_continuous(breaks = seq(0,36000,len = 10)) + scale_fill_discrete(name = 'Credit Grade')
cbPallette = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(dfn, aes(x = home_ownership, y = loan_amnt, fill = grade)) + geom_boxplot() + labs(title = "Boxplot of Loan Amounts by Home Ownership", x = "Home Ownership", y = "Loan Amount ($)") +scale_y_continuous(breaks = seq(0,36000,len = 10)) + scale_fill_discrete(name = 'Credit Grade') + scale_fill_manual(values = cbPallette)
##############################################################################
#Setup
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(plyr)
library(tensorflow)
library(keras3)
library(data.table)
library(caret)
library(e1071)
library(DoubleML)
library(mlr3learners)
library(leaps)
library(mgcv)
library(gam)
library(dplyr)
tf$constant("Hello Tensorflow!")
