#################################
library(tensorflow)
library(keras)
install_tensorflow(envname = "r-reticulate")
library(keras)
install_keras(envname = "r-reticulate")
tf$constant("Hello Tensorflow!")
#################################
library(reticulate)
library(tensorflow)
library(keras)
install_tensorflow(envname = "r-reticulate")
install_keras(envname = "r-reticulate")
#################################
library(reticulate)
library(tensorflow)
library(keras)
install_keras(envname = "r-reticulate")
set.seed(123)
ntest = floor(nrow(data)/3)  # 1/3 of data is test
testid = sample(1:nrow(data), ntest)  # indices of test obs
testset = data[testid]
trainset = data[-testid]
set.seed(123)
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`, trainset)
##############################################################################
#Setup
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(plyr)
#################################
library(tensorflow)
library(keras)
library(data.table)
library(caret)
library(e1071)
library(DoubleML)
library(dplyr)
tf$constant("Hello Tensorflow!")
data = fread("C:/Users/eliot/OneDrive/Desktop/ECONPROJECT/gdp_merged.csv")
data = data[, !('Unnamed: 0')]
data$Population = gsub(",","",data$Population)
data$Population= as.numeric(data$Population)
########
# Initial research
library(hdm)
library(glmnet)
# Initial (basic) model
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`)^2 + (`Thousands of chained 2012 dollars`) + `Population`, data)
y = data$`Total FFCO2 (tC)`
model = glm(y~x,data = data,family = gaussian())
summary(model)
columns = colnames(data)
emiscols = columns[grepl("\\(tC\\)", columns)]
print(data[is.na(data)])
print(data[complete.cases(data) == FALSE, ])
models = list()
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = glm(form, data = data, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
## Same thing, but for logarithmic models
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ log(`Quantity index`)+ log(`Thousands of dollars`) + log(`Thousands of chained 2012 dollars`) + log(`Population`)", sep = ""))
models[[i]] = glm(form, data = data, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
set.seed(123)
ntest = floor(nrow(data)/3)  # 1/3 of data is test
testid = sample(1:nrow(data), ntest)  # indices of test obs
testset = data[testid]
trainset = data[-testid]
set.seed(123)
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`, trainset)
y = trainset$`Total FFCO2 (tC)`
############ DOUBLE LASSO (VARIABLE SELECTION)
set.seed(123)
lasso_model = glmnet(x, y, family = "gaussian", alpha = 1)
set.seed(123)
cv_model = cv.glmnet(x, y_numeric, family = "binomial", alpha = 1)
plot(cv_model)
cv_model = cv.glmnet(x, y, family = "binomial", alpha = 1)
cv_model = cv.glmnet(x, y, family = "gaussian", alpha = 1)
plot(cv_model)
best_lambda = cv_model$lambda.min
best_coefs = coef(cv_model, s = "lambda.min")
relevant_variables = best_coefs[best_coefs != 0]
print(relevant_variables)
best_coefs_dense = as.matrix(best_coefs)
best_coefs_df = data.frame(Coefficient = best_coefs_dense[,1], row.names = rownames(best_coefs_dense))
best_coefs_df$AbsoluteCoefficient = abs(best_coefs_df$Coefficient)
relevant_variables = best_coefs_df[best_coefs_df$Coefficient != 0 & row.names(best_coefs_df) != "(Intercept)",, drop = FALSE]
print(relevant_variables)
summary(best_coefs)
model = glm(y~x,data = trainset, family = gaussian())
summary(model)
models = list()
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = glm(form, data = trainset, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
sigemisvars = list()
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars[i] = emiscols[i]
}
}
print(sigemisvars)
sigemisvars = list()
# Looking for statistically significant models:
for (i in 1:length(models)) {
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars = append(sigvbaemiscols[i], emiscols[i])
}
}
sigemisvars = list()
# Looking for statistically significant models:
for (i in 1:length(models)) {
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars = append(sigemisvars[i], emiscols[i])
}
}
print(sigemisvars)
sigemisvars = list()
# Looking for statistically significant models:
for (i in 1:length(models)) {
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars = append(sigemisvars, emiscols[i])
}
}
print(sigemisvars)
sigemisvars = list()
# Looking for statistically significant models:
for (i in 1:length(models)) {
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
significant <- p_values < 0.05 & names(p_values) %in% c("`Quantity index`", "`Thousands of dollars`", "`Thousands of chained 2012 dollars`")
if (any(significant, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars <- append(sigemisvars, emiscols[i])
}
}
print(sigemisvars)
predictions = list()
for (i in 1:length(models)) {
pred = predict(models[[i]], testset)
predictions[[i]] = pred
}
summary(predictions[[1]])
summary(predictions[[2]])
print(predictions[[2]])
dim
dim(predictions)
length(predictions)
length(predictions[[2]])
sigemisvars = list()
sigmodels = list()
# Looking for statistically significant models:
for (i in 1:length(models)) {
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
significant <- p_values < 0.05 & names(p_values) %in% c("`Quantity index`", "`Thousands of dollars`", "`Thousands of chained 2012 dollars`")
if (any(significant, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars <- append(sigemisvars, emiscols[i])
sigmodels = append(sigmodels, models[[i]])
}
}
predictions = list()
mse = list()
for (i in 1:length(sigmodels)) {
pred = predict(sigmodels[[i]], testset)
actual <- testset[[sigemisvars[[i]]]]
mse[[i]] = mean((pred-actual)^2)
predictions[[i]] = pred
}
print(sigmodels)
# [1] "AIR Total FFCO2 (tC)"
# `Quantity index`                     1.083e+01  7.409e+00   1.462    0.144
# `Thousands of dollars`               4.410e-03  4.796e-04   9.194   <2e-16 ***
# `Thousands of chained 2012 dollars` -4.966e-03  5.504e-04  -9.023   <2e-16 ***
# [[38]]
# [1] "CMT Total CO2 (tC)"
# `Quantity index`                     3.147e+01  2.405e+01   1.308 0.190907
# `Thousands of dollars`               4.624e-03  1.557e-03   2.969 0.003020 **
# `Thousands of chained 2012 dollars` -6.145e-03  1.787e-03  -3.439 0.000595 ***
#
print(sapply(sigmodels,class))
# [1] "AIR Total FFCO2 (tC)"
# `Quantity index`                     1.083e+01  7.409e+00   1.462    0.144
# `Thousands of dollars`               4.410e-03  4.796e-04   9.194   <2e-16 ***
# `Thousands of chained 2012 dollars` -4.966e-03  5.504e-04  -9.023   <2e-16 ***
# [[38]]
# [1] "CMT Total CO2 (tC)"
# `Quantity index`                     3.147e+01  2.405e+01   1.308 0.190907
# `Thousands of dollars`               4.624e-03  1.557e-03   2.969 0.003020 **
# `Thousands of chained 2012 dollars` -6.145e-03  1.787e-03  -3.439 0.000595 ***
#
print(sapply(sigmodels[1],class))
sigemisvars = list()
sigmodels = list()
# Looking for statistically significant models:
for (i in 1:length(models)) {
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
significant <- p_values < 0.05 & names(p_values) %in% c("`Quantity index`", "`Thousands of dollars`", "`Thousands of chained 2012 dollars`")
if (any(significant, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars <- append(sigemisvars, emiscols[i])
sigmodels <- append(sigmodels, models[[i]])
}
}
length(models)
length(models[1])
length(models[[1]])
sigemisvars = list()
sigmodels = list()
# Looking for statistically significant models:
for (i in 1:length(models)) {
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
significant <- p_values < 0.05 & names(p_values) %in% c("`Quantity index`", "`Thousands of dollars`", "`Thousands of chained 2012 dollars`")
if (any(significant, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
sigemisvars <- append(sigemisvars, emiscols[i])
sigmodels <- append(sigmodels, models[i])
}
}
# [1] "AIR Total FFCO2 (tC)"
# `Quantity index`                     1.083e+01  7.409e+00   1.462    0.144
# `Thousands of dollars`               4.410e-03  4.796e-04   9.194   <2e-16 ***
# `Thousands of chained 2012 dollars` -4.966e-03  5.504e-04  -9.023   <2e-16 ***
# [[38]]
# [1] "CMT Total CO2 (tC)"
# `Quantity index`                     3.147e+01  2.405e+01   1.308 0.190907
# `Thousands of dollars`               4.624e-03  1.557e-03   2.969 0.003020 **
# `Thousands of chained 2012 dollars` -6.145e-03  1.787e-03  -3.439 0.000595 ***
#
print(sapply(sigmodels,class))
predictions = list()
mse = list()
for (i in 1:length(sigmodels)) {
pred = predict(sigmodels[[i]], testset)
actual <- testset[[sigemisvars[[i]]]]
mse[[i]] = mean((pred-actual)^2)
predictions[[i]] = pred
}
print(predictions[[2]])
print(mse)
print(testset[[sigemisvars[[2]]]])
print(testset[[sigemisvars[[1]]]])
