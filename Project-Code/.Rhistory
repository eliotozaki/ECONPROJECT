#################################
library(tensorflow)
library(keras)
install_tensorflow(envname = "r-reticulate")
library(keras)
install_keras(envname = "r-reticulate")
tf$constant("Hello Tensorflow!")
#################################
library(reticulate)
library(tensorflow)
library(keras)
install_tensorflow(envname = "r-reticulate")
install_keras(envname = "r-reticulate")
#################################
library(reticulate)
library(tensorflow)
library(keras)
install_keras(envname = "r-reticulate")
##############################################################################
#Setup
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(plyr)
#################################
library(tensorflow)
library(keras)
library(data.table)
library(caret)
library(e1071)
library(DoubleML)
library(mgcv)
library(gam)
library(dplyr)
tf$constant("Hello Tensorflow!")
data = fread("C:\Users\eliot\OneDrive\Desktop\ECONPROJECT\gdp_merged.csv")
data = fread("C:/Users/eliot/OneDrive/Desktop/ECONPROJECT/gdp_merged.csv")
data[, !('Unnamed:0')]
data[, !('Unnamed: 0')]
data = data[, !('Unnamed: 0')]
data$Population= as.numeric(data$Population)
data = fread("C:/Users/eliot/OneDrive/Desktop/ECONPROJECT/gdp_merged.csv")
data$Population= as.numeric(data$Population)
data = fread("C:/Users/eliot/OneDrive/Desktop/ECONPROJECT/gdp_merged.csv")
data = data[, !('Unnamed: 0')]
data$Population = gsub(",","",data$Population)
data$Population= as.numeric(data$Population)
library(hdm)
ntest = floor(nrow(data)/3)  # 1/3 of data is test
testid = sample(1:nrow(data), ntest)  # indices of test obs
x = model.matrix((Total FFCO2)~ (Quantity index)+ (Thousands of dollars) + (Thousands of chained 2012 dollars), trainset)[,-1]
trainset = data[-testid]
testset = data[testid]
x = model.matrix((`Total FFCO2`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`), trainset)[,-1]
x = model.matrix((`Total FFC02`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`), trainset)[,-1]
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`), trainset)[,-1]
y = trainset$`Total FFCO2 (tC)`
y_factor = as.factor(y)  # Assuming 'y' is your response variable
############ DOUBLE LASSO (VARIABLE SELECTION)
set.seed(123)
y = trainset$`Total FFCO2 (tC)`
lasso_model = glmnet(x, y, family = "numeric", alpha = 1)
library(glmnet)
library(hdm)
############ DOUBLE LASSO (VARIABLE SELECTION)
set.seed(123)
lasso_model = glmnet(x, y, family = "numeric", alpha = 1)
lasso_model = glmnet(x, y, family = "gaussian", alpha = 1)
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`, trainset)
y = trainset$`Total FFCO2 (tC)`
############ DOUBLE LASSO (VARIABLE SELECTION)
set.seed(123)
lasso_model = glmnet(x, y, family = "gaussian", alpha = 1)
print(y)
print(x)
library(ISLR2)
attach(Default)
Default$numdef <- as.numeric(Default$default) - 1
pdefault = sum(numdef)/length(Default$default)
pdefault = sum(Default$numdef)/length(Default$default)
df <- data.frame(Default)
m = lm(numdef~student + balance + income, data = df)
summary(m)
frame = data.frame(data)
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`, data)
y = data$`Total FFCO2 (tC)`
model = glm(y~x,data = data,family = gaussian())
print(len(x))
length(x)
length(y)
dim(x)
dim(y)
colSums(is.na(data))
print(is.na(data))
print(data[is.na(data)])
print(data[complete.cases(data) == FALSE, ])
tf$constant("Hello Tensorflow!")
data = fread("C:/Users/eliot/OneDrive/Desktop/ECONPROJECT/gdp_merged.csv")
data = data[, !('Unnamed: 0')]
data$Population = gsub(",","",data$Population)
data$Population= as.numeric(data$Population)
########
# Initial research
library(hdm)
library(glmnet)
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`, data)
y = data$`Total FFCO2 (tC)`
model = glm(y~x,data = data,family = gaussian())
summarise(model)
summary(model)
columns = data.colnames
columns = columns(data)
columns = data.columns
columns = colnames(data)
emiscols = columns[grepl("\\(tC\\)"), columns]
emiscols = columns[grepl("\\(tC\\)", columns)]
models = []
models = list()
print(emiscols[length(emiscols)])
models = list()
for (i in 1:length(emiscols)) {
form = as.formula(paste(emiscols[i],"~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`"))
models[[i]] = glm(form, data = data, family = gaussian())
}
print(emiscols)
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`"))
models[[i]] = glm(form, data = data, family = gaussian())
}
for (i in 1:length(emiscols)) {
form = as.formula(paste("`"+emiscols[i]+"` ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`"))
models[[i]] = glm(form, data = data, family = gaussian())
}
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = glm(form, data = data, family = gaussian())
}
# Initial (basic) model
x = model.matrix((`Total FFCO2 (tC)`)~ (`Quantity index`)+ (`Thousands of dollars`)^2 + (`Thousands of chained 2012 dollars`) + `Population`, data)
y = data$`Total FFCO2 (tC)`
model = glm(y~x,data = data,family = gaussian())
summary(model)
for (m in models){
summary(m)
}
for (m in models){
summary(m)
}
set.seed(123)
summary(models[1])
summary(models[[1]])
for (m in models[:]){
for (m in models[]){
summary(m)
}
summary(models[[1]])
summary(models[[2]])
for (i in length(models)){
summary(models[[i]])
}
for (i in length(models)){
print(summary(models[[i]]))
}
print(length(models))
for (i in 1:length(models)){
print(summary(models[[i]]))
}
for (i in 1:length(models)){
sum = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", i, "has significant predictors:"))
print(model_summary)
}
}
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", i, "has significant predictors:"))
print(model_summary)
}
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ (`Thousands of dollars`)^2 + (`Thousands of chained 2012 dollars`)^2 + `Population`", sep = ""))
models[[i]] = glm(form, data = data, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
## Same thing, but for logistic models
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = logit(form, data = data, family = gaussian())
}
## Same thing, but for logarithmic models
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = lm(form, data = data, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
## Same thing, but for logarithmic models
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ (`Quantity index`)+ log(`Thousands of dollars`) + log(`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = lm(form, data = data, family = gaussian())
}
## Same thing, but for logarithmic models
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("log(`",emiscols[i],"`) ~ (`Quantity index`)+ log(`Thousands of dollars`) + log(`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = lm(form, data = data, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
## Same thing, but for logarithmic models
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("log(`",emiscols[i],"`) ~ (`Quantity index`)+ (`Thousands of dollars`) + (`Thousands of chained 2012 dollars`) + `Population`", sep = ""))
models[[i]] = lm(form, data = data, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
## Same thing, but for logarithmic models
# Making models for every emissions variable
for (i in 1:length(emiscols)) {
form = as.formula(paste("`",emiscols[i],"` ~ log(`Quantity index`)+ log(`Thousands of dollars`) + log(`Thousands of chained 2012 dollars`) + log(`Population`)", sep = ""))
models[[i]] = glm(form, data = data, family = gaussian())
}
# Looking for statistically significant models:
for (i in 1:length(models)){
model_summary = (summary(models[[i]]))
p_values <- coef(model_summary)[, "Pr(>|t|)"]
if (any(p_values < 0.05, na.rm = TRUE)) {
print(paste("Model", emiscols[i], "has significant predictors:"))
print(model_summary)
}
}
